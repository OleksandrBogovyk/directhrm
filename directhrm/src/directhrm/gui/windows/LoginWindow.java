package directhrm.gui.windows;

import directhrm.Application;
import directhrm.db.ConnectProperties;
import directhrm.db.DbManager;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.sql.SQLException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ABogovik
 */
public class LoginWindow extends javax.swing.JFrame {
    private Component frame;
	private Application application;
	private File fileProperties;
	private Properties savedProperties = new Properties();

    /**
     * Creates new form loginWindow
     */
    public LoginWindow() {
        initComponents();
		String homeDir = System.getProperty("user.home");
		fileProperties = new File(homeDir+"/directhrm.properties");
		
		if( fileProperties.exists() ) {
			try {
				FileInputStream fis = new FileInputStream(fileProperties);
				savedProperties.load(fis);
				fis.close();
				dbServerField.setSelectedItem( savedProperties.getProperty("server", "") );
				loginField.setText( savedProperties.getProperty("user", "") );
				String password = savedProperties.getProperty("password", "");
				if( !"".equals(password) )
					passwordField.setText(password);
				cbPort.setSelected(savedProperties.getProperty("cbPort", "false").equals("true"));
				cbPortActionPerformed(null);
				dbPortField.setText( savedProperties.getProperty("port", "3306") );
				cbDbUser.setSelected(savedProperties.getProperty("cbDbUser", "false").equals("true"));
				cbDbUserActionPerformed(null);
				dbUserField.setText( savedProperties.getProperty("dbUser", "root") );
				cbDbPassword.setSelected(savedProperties.getProperty("cbDbPassword", "false").equals("true"));
				cbDbPasswordActionPerformed(null);
				password = savedProperties.getProperty("dbPassword", "");
				if( !"".equals(password) )
					dbPasswordField.setText(password);
			} catch (IOException ex) {
				Logger.getLogger(LoginWindow.class.getName()).log(Level.SEVERE, null, ex);
				System.out.println(ex);
			}	
		}
    }

	public void setApplication(Application application) {
		this.application = application;
	}
	

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_name = new javax.swing.JLabel();
        loginField = new javax.swing.JTextField();
        label_password = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        cancelButton = new javax.swing.JButton();
        enterButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        dbServerField = new javax.swing.JComboBox();
        label_dbserver = new javax.swing.JLabel();
        label_greeting = new javax.swing.JLabel();
        dbPortField = new javax.swing.JTextField();
        dbPasswordField = new javax.swing.JPasswordField();
        dbUserField = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        cbPort = new javax.swing.JCheckBox();
        cbDbUser = new javax.swing.JCheckBox();
        cbDbPassword = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("directhrm/gui/windows/Bundle"); // NOI18N
        setTitle(bundle.getString("LoginWindow.title")); // NOI18N
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        label_name.setText(bundle.getString("LoginWindow.label_name.text")); // NOI18N

        label_password.setText(bundle.getString("LoginWindow.label_password.text")); // NOI18N

        cancelButton.setText(bundle.getString("LoginWindow.cancelButton.text")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        enterButton.setText(bundle.getString("LoginWindow.enterButton.text")); // NOI18N
        enterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterButtonActionPerformed(evt);
            }
        });

        dbServerField.setEditable(true);
        dbServerField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "127.0.0.1" }));
        dbServerField.setToolTipText(bundle.getString("LoginWindow.dbServerField.toolTipText")); // NOI18N

        label_dbserver.setText(bundle.getString("LoginWindow.label_dbserver.text")); // NOI18N

        label_greeting.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        label_greeting.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_greeting.setText(bundle.getString("LoginWindow.label_greeting.text")); // NOI18N

        dbPortField.setText(bundle.getString("LoginWindow.dbPortField.text")); // NOI18N
        dbPortField.setEnabled(false);

        dbPasswordField.setEnabled(false);

        dbUserField.setText(bundle.getString("LoginWindow.dbUserField.text")); // NOI18N
        dbUserField.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel1.setText(bundle.getString("LoginWindow.jLabel1.text")); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel3.setText(bundle.getString("LoginWindow.jLabel3.text")); // NOI18N

        jButton1.setText(bundle.getString("LoginWindow.jButton1.text")); // NOI18N
        jButton1.setEnabled(false);

        cbPort.setText(bundle.getString("LoginWindow.cbPort.text")); // NOI18N
        cbPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPortActionPerformed(evt);
            }
        });

        cbDbUser.setText(bundle.getString("LoginWindow.cbDbUser.text")); // NOI18N
        cbDbUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDbUserActionPerformed(evt);
            }
        });

        cbDbPassword.setText(bundle.getString("LoginWindow.cbDbPassword.text")); // NOI18N
        cbDbPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDbPasswordActionPerformed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/directhrm/img/icon/LoginWindowLogo.png"))); // NOI18N
        jLabel5.setText(bundle.getString("LoginWindow.jLabel5.text")); // NOI18N

        jLabel4.setText(bundle.getString("LoginWindow.jLabel4.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator1)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(cancelButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(enterButton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(cbPort)
                                                    .addComponent(cbDbUser)
                                                    .addComponent(cbDbPassword))
                                                .addGap(11, 11, 11)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(dbPasswordField)
                                                    .addComponent(dbUserField)
                                                    .addComponent(dbPortField, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(jButton1))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(1, 1, 1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(label_name)
                                    .addComponent(label_password)
                                    .addComponent(label_dbserver))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(passwordField, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(dbServerField, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(loginField, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(11, 11, 11)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_greeting, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, enterButton, jButton1});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label_greeting)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(loginField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label_name))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_password)
                            .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dbServerField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label_dbserver))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dbPortField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbPort))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dbUserField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbDbUser))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dbPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbDbPassword))
                        .addGap(11, 11, 11)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cancelButton)
                            .addComponent(enterButton)
                            .addComponent(jButton1))))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
		dispose();
		System.exit(0);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void enterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterButtonActionPerformed
		String login = loginField.getText();
		String password = new String( passwordField.getPassword() );
		if (login.isEmpty() && password.isEmpty()) {
			JOptionPane.showMessageDialog(frame,
					"Поля не могут быть пустыми! Пожалуйста, попробуйте ещё раз.",
					"Ошибка",
					JOptionPane.ERROR_MESSAGE);
			return;
		}
		String database = "hrms";
		ConnectProperties cp = new ConnectProperties();
		cp.setServer( dbServerField.getSelectedItem().toString() );
		cp.setDatabase(database);
		cp.setUser( login );
		cp.setPassword(password);
		if( cbPort.isSelected() )
			cp.setPort(dbPortField.getText());
		else
			cp.setPort("3306");
		if( cbDbUser.isSelected() )
			cp.setDbUser(dbUserField.getText());
		else
			cp.setDbUser("root");
		if( cbDbPassword.isSelected() )
			cp.setDbPassword( new String(dbPasswordField.getPassword()));
		else
			cp.setDbPassword("");
		DbManager dbManager = application.getDbManager();
		
		try {
			String response = dbManager.tryLogin( cp );
			if( !"".equals( response ) ) {
				JOptionPane.showMessageDialog(
						frame, response, "Ошибка", JOptionPane.ERROR_MESSAGE);
				return;
			}

			LoginWindow.this.setVisible(false);
			LoginWindow.this.dispose();
			
			application.initControllers();
			application.showMainWindow();
		} catch (ClassNotFoundException | IllegalAccessException | InstantiationException | SQLException | NoSuchAlgorithmException ex) {
			Logger.getLogger(LoginWindow.class.getName()).log(Level.SEVERE, null, ex);
			System.out.println(ex);
			JOptionPane.showMessageDialog(frame,
					"Не удалось установить связь с сервером базы данных! "
							+ "Пожалуйста, попробуйте ещё раз.",
					"Ошибка",
					JOptionPane.ERROR_MESSAGE);
		}

		try {
			savedProperties.setProperty("server", cp.getServer());
			savedProperties.setProperty("user", cp.getUser());
			savedProperties.setProperty("cbPort", cbPort.isSelected() ? "true" : "false");
			savedProperties.setProperty("port", cp.getPort());
			savedProperties.setProperty("cbDbUser", cbDbUser.isSelected() ? "true" : "false");
			savedProperties.setProperty("dbUser", cp.getDbUser());
			savedProperties.setProperty("cbDbPassword", cbDbPassword.isSelected() ? "true" : "false");
			if( !fileProperties.exists() )
				fileProperties.createNewFile();
                    try (FileOutputStream fos = new FileOutputStream(fileProperties)) {
                        savedProperties.store(fos, "");
                    }
		} catch (IOException ex) {
			Logger.getLogger(LoginWindow.class.getName()).log(Level.SEVERE, null, ex);
			System.out.println(ex);
		}	
		
    }//GEN-LAST:event_enterButtonActionPerformed
    
    
    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
        System.out.println("Enter Button pressed.");
        }
    }//GEN-LAST:event_formKeyPressed

    private void cbPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPortActionPerformed
        if (cbPort.isSelected()) {
            dbPortField.setEnabled(true);
        } else {
            dbPortField.setEnabled(false);
        }
    }//GEN-LAST:event_cbPortActionPerformed

    private void cbDbUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDbUserActionPerformed
        if (cbDbUser.isSelected()) {
            dbUserField.setEnabled(true);
        } else {
            dbUserField.setEnabled(false);
        }
    }//GEN-LAST:event_cbDbUserActionPerformed

    private void cbDbPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDbPasswordActionPerformed
        if (cbDbPassword.isSelected()) {
            dbPasswordField.setEnabled(true);
        } else {
            dbPasswordField.setEnabled(false);
        }
    }//GEN-LAST:event_cbDbPasswordActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JCheckBox cbDbPassword;
    private javax.swing.JCheckBox cbDbUser;
    private javax.swing.JCheckBox cbPort;
    private javax.swing.JPasswordField dbPasswordField;
    private javax.swing.JTextField dbPortField;
    private javax.swing.JComboBox dbServerField;
    private javax.swing.JTextField dbUserField;
    private javax.swing.JButton enterButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel label_dbserver;
    private javax.swing.JLabel label_greeting;
    private javax.swing.JLabel label_name;
    private javax.swing.JLabel label_password;
    private javax.swing.JTextField loginField;
    private javax.swing.JPasswordField passwordField;
    // End of variables declaration//GEN-END:variables

}
